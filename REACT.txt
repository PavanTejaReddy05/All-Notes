REACT
-----
1. Components and props
2. Hooks
3. Call backs
4. State Management
5. Event Handling


*Components
*Props
*State


-->Props is used for reusability "It shows the data when the data comes from outside"
	It is easy to extract data from outside instead of generating itself

-->State is used for SPA(Single Page Application) & used to create data in itself of the component

-->Components=2types
	+)Class Based Component (State Inbuilt is present)
	+)Function Based Component(No State Inbuilt is present but hook will be present)
		--Hooks are special type of function
----------------------------------------------------------------
function App(){
	return(
	<h1>Hello World</h1>
);
}
export default App()
============================================	
import React, {useState} from 'react'

const App = () => {
  const [name]=useState("Pavan Teja Reddy")
  return (
    <div>  
      <h2>Welcome to {name}</h2>
    </div>
  )
}
export default App
-----------------------------------------------------------------
App.tsx:-

import React from 'react';
import Routes from './Routes/index';

const App:React.FC=()=>{
// function App(){
  return(
    <>
    <Routes/>
    </>

  );
};
export default App;
----------------------------------------------------------------
Main.tsx:-

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import App from './App.tsx'
import './index.css'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
-------------------------------------------------------------------
Index.tsx:-

import { RouterProvider, createBrowserRouter } from "react-router-dom";
import Home from "../views/home/home";
import Contact from "../views/Contact/Contact";

const Routes = () => {
  // Define public routes accessible to all users
  const routesForPublic: any = [
    {
      path: "/",
      element: <Home/>,
    },
    {
      path:'/Contact',
      element:<Contact/>
    }
  ];

  // Combine and conditionally include routes based on authentication status
  const router = createBrowserRouter([
    ...routesForPublic
  ]);

  // Provide the router configuration using RouterProvider
  return <RouterProvider router={router} />;
};
export default Routes;
========================================================
See some examples on useState in ChatGPT for reference or Practice
=========================================================
UseEffect=>SYNTAX

useEffect( ()=>{},[])
---------------------------
import { useState, useEffect } from 'react'
const StateMgm = () => {
    const [state,setstate]=useState("Hyderabad")

    useEffect(()=>{
        if(state==="Hyderabad"){
            setstate("Bangalore")
        }else{
            setstate("Delhi")
        }
    }, [])
    return (
        <div><h1>StateMgm:{state}</h1></div>
    )
} 
export default StateMgm
______________________________________________________________________________
Ternary Operator:-
Condition = True / False
Syntax:-
Condition ? True : False
______________________________________________________________________________

Events:-
=======
1.Mouse Events
-click
-bdlclick(Double Click
-mouseover
-mousecenter
-mouseleave
-mousedown
-mouseup

2.KeyBoardEvents:-
-keydown
-keyup
keypress


3.Form Events:-
-submit
-reset
-focus
-blur
-change
-input
-------------------------------------------------------------------
DOM=>Document Object Model
DOM is a Programming interface by browser
-------------------------------------------------------------------
useContext==?(Not Completed)
import & Export==?(Not Completed)
-------------------------------------------------------------------
  const [data,setdata]=useState<Product[]>([]);
  useEffect(()=>{
    fetch('https://fakestoreapi.com/products')
            .then(response=>response.json())
            .then(json =>setdata(json))
            .catch(error=>console.error("Error fetching data: ",error));
  },[]);
